<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>设计模式 on 我的学习博客</title><link>https://yslinwe.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><description>Recent content in 设计模式 on 我的学习博客</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>©2023, All Rights Reserved</copyright><lastBuildDate>Thu, 18 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yslinwe.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>C# 单例模式</title><link>https://yslinwe.github.io/posts/2023-05-18_15-01-36/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_15-01-36/</guid><description>C# 单例模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 对象池模式</title><link>https://yslinwe.github.io/posts/2023-05-18_16-42-58/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_16-42-58/</guid><description>C#对象池模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 服务定位模式</title><link>https://yslinwe.github.io/posts/2023-05-18_16-34-38/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_16-34-38/</guid><description>C# 服务定位模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 观察者模式</title><link>https://yslinwe.github.io/posts/2023-05-18_14-47-32/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_14-47-32/</guid><description>C# 观察者模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 类型对象模式</title><link>https://yslinwe.github.io/posts/2023-05-18_16-00-12/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_16-00-12/</guid><description>C# 类型对象模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 命令模式</title><link>https://yslinwe.github.io/posts/2023-05-18_14-47-07/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_14-47-07/</guid><description>C# 命令模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 事件队列模式</title><link>https://yslinwe.github.io/posts/2023-05-18_16-07-25/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_16-07-25/</guid><description>C# 事件队列模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 双缓冲模式</title><link>https://yslinwe.github.io/posts/2023-05-18_15-08-22/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_15-08-22/</guid><description>C# 双缓冲模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 享元模式</title><link>https://yslinwe.github.io/posts/2023-05-18_14-42-51/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_14-42-51/</guid><description>C# 享元模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 状态模式</title><link>https://yslinwe.github.io/posts/2023-05-18_15-05-15/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_15-05-15/</guid><description>C# 状态模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C# 组件模式</title><link>https://yslinwe.github.io/posts/2023-05-18_16-02-07/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_16-02-07/</guid><description>C# 组件模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item><item><title>C#原型模式</title><link>https://yslinwe.github.io/posts/2023-05-18_14-57-14/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><atom:modified>Thu, 18 May 2023 00:00:00 +0000</atom:modified><guid>https://yslinwe.github.io/posts/2023-05-18_14-57-14/</guid><description>C#原型模式</description><dc:creator>YSL</dc:creator><category>设计模式</category></item></channel></rss>